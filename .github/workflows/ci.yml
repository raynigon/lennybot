name: CI

on: [push]

env:
  PYTHON_VERSION: "3.11"

jobs:
  lint_black:
    name: "Linter - Black"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v6
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black
          pip install -r requirements.txt
      - uses: psf/black@stable
        with:
            options: "--check --verbose"
            src: "./src"
            version: "~= 22.0"
  lint_ruff:
    name: "Linter - Ruff"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v6
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
          pip install -r requirements.txt
      - name: Lint with ruff
        run: |
          # stop the build if there are Python syntax errors or undefined names
          ruff check --output-format=github --select=E9,F63,F7,F82 --target-version=py311 .
  lint_isort:
    name: "Linter - iSort"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v6
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install isort
          pip install -r requirements.txt
      - name: Lint with ruff
        run: |
          isort **/*.py -c
  lint_pylint:
    name: "Linter - PyLint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: 3.x
      - name: Python Pip Install
        run: pip install -r requirements.txt
      - name: Python Lint
        run: |
          echo "::add-matcher::.github/matchers/pylint-error.json"
          echo "::add-matcher::.github/matchers/pylint-warning.json"
          pip install pylint
          pylint --output-format=colorized src/lennybot
  lint_pyright:
    name: "Linter - PyRight"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyright
          pip install -r requirements.txt
      - name: Lint with pyright
        run: |
          pyright --version
          pyright
  python_tests:
    name: "Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup Python and tests
        uses: actions/setup-python@v6
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r requirements.txt
          pip install -e .
      - name: Python tests with pytest
        run: |
          pytest .
 
